from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.types import InlineKeyboardMarkup, CopyTextButton

NUM_MAX_WEEKS = 2

def schedule_pagination_keyboard(current_tab: str, current_week_index: int, current_day_index: int,
                  num_max_days: int, schedule_type: str, subscribed: bool, link: str) -> InlineKeyboardMarkup:
    """
    Build keyboard markup based on schedule type and current view state.
    """
    builder = InlineKeyboardBuilder()
    pattern = [3, 4]  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è –≤–µ—Ä—Ö–Ω–µ–π –ø–∞–Ω–µ–ª–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏

    # –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –≤–µ—Ä—Ö–Ω–µ–π –ø–∞–Ω–µ–ª–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    tabs = {
        'basic': '..',
        'consultations': '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏',
        'session': '–°–µ—Å—Å–∏—è'
    }

    if schedule_type == 'professor':
        # –î–ª—è –ø—Ä–æ—Ñ–µ—Å—Å–æ—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω—ã –≤—Å–µ —Ç—Ä–∏ –≤–∫–ª–∞–¥–∫–∏
        nav_buttons = [
            ('–ó–∞–Ω—è—Ç–∏—è' if current_tab != 'basic' else '..', 'basic_tab' if current_tab != 'basic' else 'nop'),
            ('–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏' if current_tab != 'consultations' else '..', 'consultations_tab' if current_tab != 'consultations' else 'nop'),
            ('–°–µ—Å—Å–∏—è' if current_tab != 'session' else '..', 'session_tab' if current_tab != 'session' else 'nop')
        ]
    else:
        # –î–ª—è —Å—Ç—É–¥–µ–Ω—Ç–∞ –¥–æ—Å—Ç—É–ø–Ω—ã —Ç–æ–ª—å–∫–æ –¥–≤–µ –≤–∫–ª–∞–¥–∫–∏
        nav_buttons = [
            ('–ó–∞–Ω—è—Ç–∏—è' if current_tab != 'basic' else '..', 'basic_tab' if current_tab != 'basic' else 'nop'),
            ('–°–µ—Å—Å–∏—è' if current_tab != 'session' else '..', 'session_tab' if current_tab != 'session' else 'nop')
        ]
        pattern = [2, 4]  # –ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É–µ–º –ø–∞—Ç—Ç–µ—Ä–Ω –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–∞

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    for text, callback in nav_buttons:
        builder.button(text=text, callback_data=callback)

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ –Ω–µ–¥–µ–ª—è–º –∏ –¥–Ω—è–º —Ç–æ–ª—å–∫–æ –¥–ª—è –≤–∫–ª–∞–¥–∫–∏ basic
    if current_tab == 'basic':
        builder.button(text=f'{current_week_index}/{NUM_MAX_WEEKS}', callback_data='swap_week')
        builder.button(text='<<', callback_data='prev_day')
        builder.button(text=f'{current_day_index}/{num_max_days}', callback_data='open_today')
        builder.button(text='>>', callback_data='next_day')\

    builder.button(text='üîî' if not subscribed else 'üîï', callback_data='notify_me')
    builder.button(text='üìÖ', callback_data='get_calendar')
    builder.button(text='üìä', callback_data='ai_summary')
    builder.button(text='üîÅ', copy_text=CopyTextButton(text=link))

    return builder.adjust(*pattern).as_markup()


def help_keyboard() -> InlineKeyboardMarkup:
    """
    Build keyboard markup for help command.
    """
    builder = InlineKeyboardBuilder()
    pattern = [1, 2]  # –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ –∫–Ω–æ–ø–æ—á–∫–∏

    builder.button(text='–ó–∞–¥–æ–Ω–∞—Ç–∏—Ç—å ‚òïÔ∏è', url='https://pay.cloudtips.ru/p/190e1668')
    builder.button(text='–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫', url='https://t.me/jahagafagshsjaavv')
    builder.button(text='–ö–æ–¥ –ø—Ä–æ–µ–∫—Ç–∞', url='https://github.com/unknown81d/pallada_tgbot')

    return builder.adjust(*pattern).as_markup()
